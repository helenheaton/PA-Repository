#region Prolog

# Imports leaf level data from CSV
# Programmed for up to 9 dimensions

sView = GetProcessName|' Import';
sSubset = GetProcessName|' Import';
nTemp = 1;

sArchCube = 'zArchive - '|pCube;

nCubeLogging = CubeGetLogChanges( sArchCube );
CubeSetLogChanges( sArchCube, 0 );

# Create Target view and clear data

ViewDestroy( sArchCube, sView );
ViewCreate( sArchCube, sView, nTemp );

nDim=CubeDimensionCountGet( sArchCube );
iDim = 1;
While (iDim <= nDim);
  sDim = TABDIM( sArchCube, iDim );
  IF(SubsetExists( sDim, ssubset )=0);
    SubsetCreate( sDim, sSubset, nTemp );
  Else;
    SubsetDeleteAllElements( sDim, sSubset );
  Endif;
  SubsetMDXSet( sDim, sSubset, 'TM1Filterbylevel(TM1SubsetAll(['| sDim |']),0)' );
  SubsetMDXSet( sDim, sSubset, '' );
  ViewSubsetAssign( sArchCube, sView, sDim, sSubset );
iDim = iDim+1;
End;

sDim = 't_Financial Year';
# sYear = CellGetS('Admin - Model Parameters', pYear,'Value' );
sYear = Attrs('t_Year', pYear, 'Financial Year');
SubsetDeleteAllElements( sDim, sSubset );
SubsetMDXSet( sDim, sSubset, '{[' | sDim | '].[ ' | sYear | ']}' );
SubsetMDXSet( sDim, sSubset, '' );

ViewZeroOut( sArchCube, sView );

# Define source file

sFileLocation = GetProcessErrorFileDirectory;
sFileLocation = Subst(sFileLocation, 1, LONG( sFileLocation )-5)|'Data\Model_Upload';

sFileName = pCube | ' Roll Forward Extract.csv';

IF(FileExists( sFileLocation |'\'| sFileName )=0);
  ProcessBreak;
Endif;


DatasourceType = 'CHARACTERDELIMITED';
DatasourceNameForClient = sFileLocation |'\'| sFileName;
DatasourceNameForServer = sFileLocation |'\'| sFileName;
DatasourceASCIIHeaderRecords = 1;
#endregion
#region Data

IF(TABDIM( sArchCube, 1)@='t_Financial Year');
  v1=sYear;
ElseIf(TABDIM( sArchCube, 2)@='t_Financial Year');
  v2=sYear;
ElseIf(TABDIM( sArchCube, 3)@='t_Financial Year');
  v3=sYear;
ElseIf(TABDIM( sArchCube, 4)@='t_Financial Year');
  v4=sYear;
ElseIf(TABDIM( sArchCube, 5)@='t_Financial Year');
  v5=sYear;
ElseIf(TABDIM( sArchCube, 6)@='t_Financial Year');
  v6=sYear;
ElseIf(TABDIM( sArchCube, 7)@='t_Financial Year');
  v7=sYear; 
ElseIf(TABDIM( sArchCube, 8)@='t_Financial Year');
  v8=sYear;   
ElseIf(TABDIM( sArchCube, 9)@='t_Financial Year');
  v9=sYear; 
Else;
  ProcessError;
Endif;


IF(nDim = 2);
  If(ElementType( TabDim(sArchCube, 2), TabDim(sArchCube, 2), v2 )@='S' % ElementType( TabDim(sArchCube, 1), TabDim(sArchCube, 1), v1 )@='S');
    CellPutS(( v3 ), sArchCube, v1, v2 );
  Else;
    CellPutN(StringToNumber( v3 ), sArchCube, v1, v2 );
  Endif;
  
ElseIf(nDim = 3);
  If(ElementType( TabDim(sArchCube, 3), TabDim(sArchCube, 3), v3 )@='S' %   ElementType( TabDim(sArchCube, 2), TabDim(sArchCube, 2), v2 )@='S');
    CellPutS(( v4 ), sArchCube, v1, v2, v3 );
  Else;
    CellPutN(StringToNumber( v4 ), sArchCube, v1, v2, v3 );
  Endif;
  
ElseIf(nDim = 4);
  If(ElementType( TabDim(sArchCube, 4), TabDim(sArchCube, 4), v4 )@='S');
    CellPutS(( v5 ), sArchCube, v1, v2, v3, v4 );
  Else;
    CellPutN(StringToNumber( v5 ), sArchCube, v1, v2, v3, v4 );
  Endif;
  
ElseIf(nDim = 5);
  If(ElementType( TabDim(sArchCube, 5), TabDim(sArchCube, 5), v5 )@='S');
    CellPutS(( v6 ), sArchCube, v1, v2, v3, v4, v5 );
  Else;
    CellPutN(StringToNumber( v6 ), sArchCube, v1, v2, v3, v4, v5 );
  Endif;
  
ElseIf(nDim = 6);
  If(ElementType( TabDim(sArchCube, 6), TabDim(sArchCube, 6), v6 )@='S'% ElementType( TabDim(sArchCube, 5), TabDim(sArchCube, 5), v5 )@='S');
    CellPutS(( v7 ), sArchCube, v1, v2, v3, v4, v5, v6 );
  Else;
    CellPutN(StringToNumber( v7 ), sArchCube, v1, v2, v3, v4, v5, v6 );
  Endif;
  
ElseIf(nDim = 7);
  If(ElementType( TabDim(sArchCube, 7), TabDim(sArchCube, 7), v7 )@='S'% ElementType( TabDim(sArchCube, 6), TabDim(sArchCube, 6), v6 )@='S');
    CellPutS(( v8 ), sArchCube, v1, v2, v3, v4, v5, v6, v7 );
  Else;
    CellPutN(StringToNumber( v8 ), sArchCube, v1, v2, v3, v4, v5, v6, v7 );
  Endif;

ElseIf(nDim = 8);
  If(ElementType( TabDim(sArchCube, 8), TabDim(sArchCube, 8), v8 )@='S'% ElementType( TabDim(sArchCube, 7), TabDim(sArchCube, 7), v7 )@='S');
    CellPutS(( v9 ), sArchCube, v1, v2, v3, v4, v5, v6, v7, v8 );
  Else;
    CellPutN(StringToNumber( v9 ), sArchCube, v1, v2, v3, v4, v5, v6, v7, v8 );
  Endif;

ElseIf(nDim = 9);
  If(ElementType( TabDim(sArchCube, 9), TabDim(sArchCube, 9), v9 )@='S' % ElementType( TabDim(sArchCube, 8), TabDim(sArchCube, 8), v8 )@='S');
    CellPutS(( v10 ), sArchCube, v1, v2, v3, v4, v5, v6, v7, v8, v9 );
  Else;
    CellPutN(StringToNumber( v10 ), sArchCube, v1, v2, v3, v4, v5, v6, v7, v8, v9);
  Endif;

Else; 
# More than 9 dimensions
ProcessError;
Endif;


#endregion
#region Epilog

CubeSetLogChanges( sArchCube, nCubeLogging );
#endregion