#region Prolog

SourceCubeName = 'Payroll Costs by Dept';
TargetCubeName = 'PL by Dept';

#################################################################################
### Define Source View ###
ViewName='DATACOPY - Payroll to P&L';

if(ViewExists(SourceCubeName,ViewName)=1);
   ViewDestroy(SourceCubeName,ViewName);
endif;
ViewCreate(SourceCubeName,ViewName);

# Create set for version dimension
DimName='Version';
SubName = ViewName;

if(SubsetExists(DimName,SubName)=1);
   SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;

SubsetElementInsert(DimName,SubName,pVersion,1);

ViewSubsetAssign(SourceCubeName,ViewName,DimName,SubName);
ViewSubsetAssign(SourceCubeName,ViewName,'t_Year','Current Year');

### Set View Extract parameters ###
ViewExtractSkipCalcsSet( SourceCubeName, ViewName, 0 );
ViewExtractSkipRuleValuesSet( SourceCubeName, ViewName, 0 );
ViewExtractSkipZeroesSet( SourceCubeName, ViewName, 1 );

### Assign Datasource ###
DataSourceType = 'VIEW';
DatasourceNameForServer = SourceCubeName;
DatasourceNameForClient = SourceCubeName;
DatasourceCubeView = ViewName;

#################################################################################
### Define  and zero out Target View###
ViewName='DATACOPY - Payroll to P&L';

if(ViewExists(TargetCubeName,ViewName)=1);
   ViewDestroy(TargetCubeName,ViewName);
endif;
ViewCreate(TargetCubeName,ViewName);

# Create set for version dimension
DimName='Version';
SubName = ViewName;

if(SubsetExists(DimName,SubName)=1);
   SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;

SubsetElementInsert(DimName,SubName,pVersion,1);

ViewSubsetAssign(TargetCubeName,ViewName,DimName,SubName);

#Apply Current Year set
ViewSubsetAssign(TargetCubeName,ViewName,'t_Year','Current Year');

#Apply Payroll set to Nominal Codes
ViewSubsetAssign(TargetCubeName,ViewName,'Nominal Code','Payroll');

#Zero out Cube
ViewZeroOut(TargetCubeName,ViewName);

#################################################################################


#endregion
#region Data
If (CellIsUpdateable( TargetCubeName, Version, t_Period, t_Year, Department, Contract, NominalCode ) = 1);
    CellIncrementN( Value, TargetCubeName, Version, t_Period, t_Year, Department, Contract, NominalCode ); 
Endif;
#endregion