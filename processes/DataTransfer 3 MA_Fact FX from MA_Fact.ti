#region Prolog
# ===========================================================================================
# Define cubes and destroy and recreate views
# ===========================================================================================

### Logging parameters ###
sLogDirectory = GetProcessErrorFileDirectory;
 
### Define cubes and views ###
SourceCube='MA_Fact';
TargetCube='MA_Fact FX';

ViewName='zFX from Fact';
SubName = ViewName;

### Destroy and recreate source view ###

if(ViewExists(SourceCube,ViewName)=1);
  ViewDestroy(SourceCube,ViewName);
endif;
ViewCreate(SourceCube,ViewName);


### Destroy and recreate target views ###
CubeSetLogChanges(TargetCube, 0);

if(ViewExists(TargetCube,ViewName)=1);
  ViewDestroy(TargetCube,ViewName);
endif;
ViewCreate(TargetCube,ViewName);


# ===========================================================================================
# Create Source View
# ===========================================================================================

# Company
DimName = 'Companies';

IF(SUBSETEXISTS(DimName,SubName)=1);
  SubsetDestroy(DimName,SubName);
endif;
SubsetCreate(DimName,SubName);


if(pCompany@<>'');
  SUBSETELEMENTINSERT(DimName,SubName,pCompany,1);
  VIEWSUBSETASSIGN(SourceCube,ViewName,'Companies',SubName);
endif;

if(pCompany@='');
  VIEWSUBSETASSIGN(SourceCube,ViewName,'Companies','All Leaves');
endif;


# Period
DimName = 'Period';

IF(SUBSETEXISTS(DimName,SubName)=1);
  SubsetDestroy(DimName,SubName);
endif;
SubsetCreate(DimName,SubName);

if(pPeriod @='');
  pPeriod = CellGetS( 'MA_parameters', 'Current Period', 'Value' );
  SUBSETELEMENTINSERT(DimName,SubName,pPeriod,1);
  VIEWSUBSETASSIGN(SourceCube, ViewName,DimName,SubName);
Else;  
  sMDX='DISTINCT({[Period].[Period].[' | pPeriod | '],DESCENDANTS([Period].[Period].[' | pPeriod | '] , 99 , LEAVES),[Period].[Period].[Unassigned]})';
  SubsetMDXSet(DimName,SubName,sMDX);
  SubsetMDXSet(DimName,SubName,'');
  ViewSubsetAssign(SourceCube, ViewName,DimName,SubName);
Endif;


### Other dimensions ###
VIEWSUBSETASSIGN(SourceCube,ViewName,'MA_Scenario','All Leaves');
VIEWSUBSETASSIGN(SourceCube,ViewName,'MA_Layer','All Leaves');
VIEWSUBSETASSIGN(SourceCube,ViewName,'TM1 Accounts','All Leaves');
VIEWSUBSETASSIGN(SourceCube,ViewName,'YTD-Month','Fact elements');

### Set View Extract parameters ###
VIEWEXTRACTSKIPCALCSSET(SourceCube,ViewName,0);
VIEWEXTRACTSKIPRULEVALUESSET(SourceCube,ViewName,0);
VIEWEXTRACTSKIPZEROESSET(SourceCube,ViewName,1);

### Assign Datasource ###
DataSourceType = 'VIEW';
DataSourceNameForServer = SourceCube;
DataSourceNameForClient = SourceCube;
DataSourceCubeView = ViewName;


# ===========================================================================================
# Clear Destination - MA_Fact
# ===========================================================================================

DimName = 'Companies';
### Company dimension ###
if(pCompany@<>'');
  SUBSETELEMENTINSERT(DimName,SubName,pCompany,1);
  VIEWSUBSETASSIGN(TargetCube,ViewName,'Companies',SubName);
endif;

if(pCompany@='');
  VIEWSUBSETASSIGN(TargetCube,ViewName,'Companies','All Leaves');
endif;


### Period dimension ###
DimName='Period';
VIEWSUBSETASSIGN(TargetCube, ViewName, DimName, SubName);


# Other dimensions
VIEWSUBSETASSIGN(TargetCube,ViewName,'MA_Scenario','All leaves');
VIEWSUBSETASSIGN(TargetCube,ViewName,'MA_Currency_Scenario','User Defined 1');
VIEWSUBSETASSIGN(TargetCube,ViewName,'MA_Layer','All Leaves');
VIEWSUBSETASSIGN(TargetCube,ViewName,'TM1 Accounts','All Leaves');
VIEWSUBSETASSIGN(TargetCube,ViewName,'YTD-Month','Fact Elements');
VIEWSUBSETASSIGN(TargetCube,ViewName,'MA_Currencies','GBP');


# Clear target cube
VIEWZEROOUT(TargetCube,ViewName);

#endregion
#region Data
if(CellIsUpdateable(TargetCube,vcompanies, vperiod, vMA_Scenario, 'Actual' , vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP')=1);
  CellPutN( Value, TargetCube,vcompanies, vperiod, vMA_Scenario, 'Actual', vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP') ;
endif;

if(CellIsUpdateable(TargetCube,vcompanies, vperiod, vMA_Scenario, 'Budget' , vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP')=1);
  CellPutN( Value, TargetCube,vcompanies, vperiod, vMA_Scenario, 'Budget', vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP') ;
endif;

if(CellIsUpdateable(TargetCube,vcompanies, vperiod, vMA_Scenario, 'Forecast' , vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP')=1);
  CellPutN( Value, TargetCube,vcompanies, vperiod, vMA_Scenario, 'Forecast', vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP') ;
endif;

if(CellIsUpdateable(TargetCube,vcompanies, vperiod, vMA_Scenario, 'User defined 1' , vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP')=1);
  CellPutN( Value, TargetCube,vcompanies, vperiod, vMA_Scenario, 'User defined 1', vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP') ;
endif;

if(CellIsUpdateable(TargetCube,vcompanies, vperiod, vMA_Scenario, 'User defined 2' , vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP')=1);
  CellPutN( Value, TargetCube,vcompanies, vperiod, vMA_Scenario, 'User defined 2', vMA_Layer, vTm1_Accounts , vYTD_Month, 'GBP') ;
endif;
#endregion