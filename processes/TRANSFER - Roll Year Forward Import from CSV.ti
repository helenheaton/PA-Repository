#region Prolog

# Imports leaf level data from CSV
# Programmed for up to 9 dimensions

sView = GetProcessName|' Import';
sSubset = GetProcessName|' Import';
nTemp = 1;


nCubeLogging = CubeGetLogChanges( pCube );
CubeSetLogChanges( pCube, 0 );

# Create Target view and clear data

ViewDestroy( pCube, sView );
ViewCreate( pCube, sView, nTemp );

nDim=CubeDimensionCountGet( pCube );
iDim = 1;
While (iDim <= nDim);
  sDim = TABDIM( pCube, iDim );
  IF(SubsetExists( sDim, ssubset )=0);
    SubsetCreate( sDim, sSubset, nTemp );
  Else;
    SubsetDeleteAllElements( sDim, sSubset );
  Endif;
  SubsetMDXSet( sDim, sSubset, 'TM1Filterbylevel(TM1SubsetAll(['| sDim |']),0)' );
  SubsetMDXSet( sDim, sSubset, '' );
  ViewSubsetAssign( pCube, sView, sDim, sSubset );
iDim = iDim+1;
End;

sDim = 't_Year';
SubsetDeleteAllElements( sDim, sSubset );
SubsetMDXSet( sDim, sSubset, '{[' | sDim | '].[ ' | pTarget | ']}' );
SubsetMDXSet( sDim, sSubset, '' );

ViewZeroOut( pCube, sView );

# Define source file

sFileLocation = GetProcessErrorFileDirectory;
sFileLocation = Subst(sFileLocation, 1, LONG( sFileLocation )-5)|'Data\Model_Upload';

sFileName = pCube | ' Roll Forward Extract.csv';

IF(FileExists( sFileLocation |'\'| sFileName )=0);
  ProcessBreak;
Endif;


DatasourceType = 'CHARACTERDELIMITED';
DatasourceNameForClient = sFileLocation |'\'| sFileName;
DatasourceNameForServer = sFileLocation |'\'| sFileName;
DatasourceASCIIHeaderRecords = 1;
#endregion
#region Data

IF(TABDIM( pCube, 1)@='t_Year');
  v1=pTarget;
ElseIf(TABDIM( pCube, 2)@='t_Year');
  v2=pTarget;
ElseIf(TABDIM( pCube, 3)@='t_Year');
  v3=pTarget;
ElseIf(TABDIM( pCube, 4)@='t_Year');
  v4=pTarget;
ElseIf(TABDIM( pCube, 5)@='t_Year');
  v5=pTarget;
ElseIf(TABDIM( pCube, 6)@='t_Year');
  v6=pTarget;
ElseIf(TABDIM( pCube, 7)@='t_Year');
  v7=pTarget;  
ElseIf(TABDIM( pCube, 8)@='t_Year');
  v8=pTarget;  
ElseIf(TABDIM( pCube, 9)@='t_Year');
  v9=pTarget;  
Else;
  ProcessError;
Endif;


IF(nDim = 2);
  IF(CellIsUpdateable( pCube, v1, v2)<>0);
    If(ElementType( TabDim(pCube, 2), TabDim(pCube, 2), v2 )@='S');
      CellPutS(( v3 ), pCube, v1, v2 );
    Else;
      CellPutN(StringToNumber( v3 ), pCube, v1, v2 );
     Endif;
   Endif;
   
ElseIf(nDim = 3);
  IF(CellIsUpdateable( pCube, v1, v2, v3)<>0);
    If(ElementType( TabDim(pCube, 3), TabDim(pCube, 3), v3 )@='S');
      CellPutS(( v4 ), pCube, v1, v2, v3 );
    Else;
      CellPutN(StringToNumber( v4 ), pCube, v1, v2, v3 );
    Endif;
  Endif;
  
ElseIf(nDim = 4);
  IF(CellIsUpdateable( pCube, v1, v2, v3, v4)<>0);
    If(ElementType( TabDim(pCube, 4), TabDim(pCube, 4), v4 )@='S');
      CellPutS(( v5 ), pCube, v1, v2, v3, v4 );
    Else;
      CellPutN(StringToNumber( v5 ), pCube, v1, v2, v3, v4 );
    Endif;
  Endif;  

ElseIf(nDim = 5);
  IF(CellIsUpdateable( pCube, v1, v2, v3, v4, v5)<>0);
    If(ElementType( TabDim(pCube, 5), TabDim(pCube, 5), v5 )@='S');
      CellPutS(( v6 ), pCube, v1, v2, v3, v4, v5 );
    Else;
      CellPutN(StringToNumber( v6 ), pCube, v1, v2, v3, v4, v5 );
    Endif;
  Endif;   

ElseIf(nDim = 6);
  IF(CellIsUpdateable( pCube, v1, v2, v3, v4, v5, v6)<>0);
    If(ElementType( TabDim(pCube, 6), TabDim(pCube, 6), v6 )@='S');
      CellPutS(( v7 ), pCube, v1, v2, v3, v4, v5, v6 );
    Else;
      CellPutN(StringToNumber( v7 ), pCube, v1, v2, v3, v4, v5, v6 );
    Endif;
  Endif;

ElseIf(nDim = 7);
  IF(CellIsUpdateable( pCube, v1, v2, v3, v4, v5, v6, v7)<>0);
    If(ElementType( TabDim(pCube, 7), TabDim(pCube, 7), v7 )@='S');
      CellPutS(( v8 ), pCube, v1, v2, v3, v4, v5, v6, v7 );
    Else;
      CellPutN(StringToNumber( v8 ), pCube, v1, v2, v3, v4, v5, v6, v7 );
    Endif;
  Endif;

ElseIf(nDim = 8);
  IF(CellIsUpdateable( pCube, v1, v2, v3, v4, v5, v6, v7, v8)<>0);
    If(ElementType( TabDim(pCube, 8), TabDim(pCube, 8), v8 )@='S');
      CellPutS(( v9 ), pCube, v1, v2, v3, v4, v5, v6, v7, v8 );
    Else;
      CellPutN(StringToNumber( v9 ), pCube, v1, v2, v3, v4, v5, v6, v7, v8 );
    Endif;
  Endif;

ElseIf(nDim = 9);
  IF(CellIsUpdateable( pCube, v1, v2, v3, v4, v5, v6, v7, v8, v9)<>0);
    If(ElementType( TabDim(pCube, 9), TabDim(pCube, 9), v9 )@='S');
      CellPutS(( v10 ), pCube, v1, v2, v3, v4, v5, v6, v7, v8, v9 );
    Else;
      CellPutN(StringToNumber( v10 ), pCube, v1, v2, v3, v4, v5, v6, v7, v8, v9 );
    Endif;
  Endif;


Else; 
  # More than 9 dimensions
  ProcessError;
Endif;

#endregion
#region Epilog

Sleep(1000);
CubeSetLogChanges( pCube, nCubeLogging );
ASCIIDelete( sFileLocation |'\'| sFileName );
#endregion