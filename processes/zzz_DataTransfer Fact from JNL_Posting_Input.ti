#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****

# This process imports the TB extract for AGM companies from Access: tm1_output_AGM.txt
# The postings are imported to MA Fact Staging
# Intercompany postings are posted to MA_Intercompany
#
# Last updated by helen.heaton@budgetingsolutions.co.uk 13/01/2023

# ===========================================================================================
# Define cubes and destroy and recreate views
# ===========================================================================================

### Define cubes and views ###
CubeName='JNL_Posting_Input';
CubeName1='MA_Fact';
CubeName2 ='MA_Fact_Dept_Analysis';

### Destroy and recreate source view ###
SourceViewName='zSource - Fact from JNL';

if(ViewExists(CubeName,SourceViewName)=1);
  ViewDestroy(CubeName,SourceViewName);
endif;
ViewCreate(CubeName,SourceViewName);


### Destroy and recreate target views ###
TargetViewName='zClearforImport - Fact from JNL';

if(ViewExists(CubeName1,TargetViewName)=1);
  ViewDestroy(CubeName1,TargetViewName);
endif;
ViewCreate(CubeName1,TargetViewName);

if(ViewExists(CubeName2, TargetViewName)=1);
  ViewDestroy(CubeName2, TargetViewName);
endif;
ViewCreate(CubeName2,TargetViewName);



# ===========================================================================================
# Create Source View
# ===========================================================================================
SubName=SourceViewName;

### Period Dimension ###
DimName='Period';

if(SubsetExists(DimName,SubName)=1);
  SubsetDeleteAllElements(DimName,SubName);
else;
  SubsetCreate(DimName,SubName);
endif;

if(pPeriod @='');
  pPeriod = CellGetS( 'MA_parameters', 'Current Period', 'Value' );
  SUBSETELEMENTINSERT(DimName,SubName,pPeriod,1);
  VIEWSUBSETASSIGN(CubeName, SourceViewName,'Period',SubName);
Else;  
  sMDX='DISTINCT({[Period].[Period].[' | pPeriod | '],DESCENDANTS([Period].[Period].[' | pPeriod | '] , 99 , LEAVES),[Period].[Period].[Unassigned]})';
  SubsetMDXSet(DimName,SubName,sMDX);
  SubsetMDXSet(DimName,SubName,'');
  ViewSubsetAssign(CubeName, SourceViewName,DimName,SubName);
Endif;

### Journal Data Dimension ###
DimName='Journal Data';

if(SubsetExists(DimName,SubName)=1);
  SubsetDeleteAllElements(DimName,SubName);
else;
  SubsetCreate(DimName,SubName);
endif;

SubsetElementInsert(DimName,SubName,'Amount',1);
ViewSubsetAssign(CubeName, SourceViewName,DimName,SubName);

### Set View Extract parameters ###
ViewExtractSkipCalcsSet( CubeName, SourceViewName, 1 );
ViewExtractSkipRuleValuesSet( CubeName, SourceViewName, 0 );
ViewExtractSkipZeroesSet( CubeName, SourceViewName, 1 );

### Assign Datasource ###
DataSourceType = 'VIEW';
DatasourceNameForServer = CubeName;
DatasourceNameForClient = CubeName;
DatasourceCubeView = SourceViewName;


# ===========================================================================================
# Clear Destination - MA_Fact
# ===========================================================================================
SubName = TargetViewName;

### Period dimension ###
DimName='Period';

if(SubsetExists(DimName,SubName)=1);
  SubsetDestroy(DimName,SubName);
endif;
SubsetCreate(DimName,SubName);

if(pPeriod @='');
  pPeriod = CellGetS( 'MA_parameters', 'Current Period', 'Value' );
  SUBSETELEMENTINSERT(DimName,SubName,pPeriod,1);
  VIEWSUBSETASSIGN(CubeName1, TargetViewName,DimName,SubName);
Else;  
  sMDX='DISTINCT({[Period].[Period].[' | pPeriod | '],DESCENDANTS([Period].[Period].[' | pPeriod | '] , 99 , LEAVES),[Period].[Period].[Unassigned]})';
  SubsetMDXSet(DimName,SubName,sMDX);
  SubsetMDXSet(DimName,SubName,'');
  ViewSubsetAssign(CubeName1, TargetViewName,DimName,SubName);
Endif;


### Layer dimension ###
DimName='MA_Layer';

if(SubsetExists(DimName,SubName)=1);
  SubsetDestroy(DimName,SubName);
endif;
SubsetCreate(DimName,SubName);

sMDX='EXCEPT([MA_Layer].[MA_Layer].MEMBERS , {[MA_Layer].[MA_Layer].[Source System]})';
 SubsetMDXSet(DimName,SubName,sMDX);
 SubsetMDXSet(DimName,SubName,'');

### Set View Extract parameters ###
ViewSubsetAssign(CubeName1,TargetViewName,DimName,SubName);

### Clear the view ###
ViewZeroOut(CubeName1,TargetViewName);


# ===========================================================================================
# Clear Destination #2 - if year (and period) specified, clear out
# ===========================================================================================

SubName = TargetViewName;

### Period Dimension ###
DimName='Period';
ViewSubsetAssign(CubeName2,TargetViewName,DimName,SubName);

### Layer Dimension ###
DimName='MA_Layer';
ViewSubsetAssign(CubeName2,TargetViewName,DimName,SubName);

### Clear the view ###
ViewZeroOut(CubeName2,TargetViewName);

#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

# ===========================================================================================
# Prepare Data
# ===========================================================================================

### Get journal info for posting ###
sAccount=CELLGETS('JNL_Posting_Input',Companies,Period,vJournal,Sequence,'TM1 Account');
sMALayer=CELLGETS('JNL_Posting_Input',Companies,Period,vJournal,Sequence,'MA_LAYER');
sDept=CELLGETS('JNL_Posting_Input',Companies,Period,vJournal,Sequence,'MA_DEPT');
nValueLocal = CELLGETN('JNL_Posting_Input',Companies,Period,vJournal,Sequence,'Value Local Currency');
nValueGBP = CELLGETN('JNL_Posting_Input',Companies,Period,vJournal,Sequence,'Value GBP');

### skip source system as this is posted to MA Fact Staging ###
if(sMALayer@='SOURCE SYSTEM');
  itemskip;
endif;

### determine whether we want Local Currency or GBP based on Journal Type ###
sMALayerParent = ELPAR('MA_Layer',sMALayer,1);

if(sMALayerParent @= 'Source LC');
  nValue = nValueLocal;
else;
  nValue = nValueGBP;
endif;


# ===========================================================================================
# Put data into 'MA_Fact'
# ===========================================================================================

CELLINCREMENTN(nValue,CubeName1,Companies,Period,'Actual',sMALayer,sAccount,'Month');


# ===========================================================================================
# Put Data into 'MA_Fact_Dept_Analysis'
# ===========================================================================================

CELLINCREMENTN(nValue,CubeName2,Companies,sDept,Period,'Actual',sMALayer,sAccount,'Month');

#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

# turn logging back on
CubeSetLogChanges(CubeName1, 1);
CubeSetLogChanges(CubeName2, 1);
#endregion