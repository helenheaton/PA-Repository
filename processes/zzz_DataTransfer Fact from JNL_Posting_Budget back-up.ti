#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****



# Create Source View
# =====================================================

CubeName='JNL_Posting_Budget';

ViewName='zTransposeToMA_Fact';
SubName=ViewName;

ViewCreate(CubeName,ViewName);

if(pYearPeriod@<>'');
if(ViewExists(CubeName,ViewName)=1);
ViewDestroy(CubeName,ViewName);
endif;
DimName='Period';
#--------------------------------------------------------------------------------------------
if(SubsetExists(DimName,SubName)=1);
SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;
## SubsetElementInsert(DimName,SubName,pYearPeriod,1);
sMDX='DRILLDOWNMEMBER({[Period].[Period].[' | pYearPeriod | ']} , {[Period].[Period].[' | pYearPeriod | ']} , RECURSIVE)';
 SubsetMDXSet(DimName,SubName,sMDX);
 SubsetMDXSet(DimName,SubName,'');

ViewSubsetAssign(CubeName,ViewName,DimName,SubName);
endif;

DimName='Journal Data';
#--------------------------------------------------------------------------------------------
if(SubsetExists(DimName,SubName)=1);
SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;
SubsetElementInsert(DimName,SubName,'Amount',1);

ViewSubsetAssign(CubeName,ViewName,DimName,SubName);




ViewExtractSkipCalcsSet( CubeName, ViewName, 1 );
ViewExtractSkipRuleValuesSet( CubeName, ViewName, 0 );
ViewExtractSkipZeroesSet( CubeName, ViewName, 1 );

### Assign Datasource ###

DataSourceType = 'VIEW';
DatasourceNameForServer = CubeName;
DatasourceNameForClient = CubeName;
DatasourceCubeView = ViewName;





# Clear Destination - if year (and period) specified, clear out
# =====================================================
CubeName='MA_Fact';
CubeSetLogChanges(CubeName,0);
ViewName='zZeroJournalImport';
SubName=ViewName;

if(ViewExists(CubeName,ViewName)=1);
ViewDestroy(CubeName,ViewName);
endif;
ViewCreate(CubeName,ViewName);

if(pYearPeriod@<>'');
DimName='Period';
#--------------------------------------------------------------------------------------------
if(SubsetExists(DimName,SubName)=1);
SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;
## SubsetElementInsert(DimName,SubName,pYearPeriod,1);
sMDX='DRILLDOWNMEMBER({[Period].[Period].[' | pYearPeriod | ']} , {[Period].[Period].[' | pYearPeriod | ']} , RECURSIVE)';
 SubsetMDXSet(DimName,SubName,sMDX);
 SubsetMDXSet(DimName,SubName,'');

ViewSubsetAssign(CubeName,ViewName,DimName,SubName);
endif;

DimName='MA_Layer';
#--------------------------------------------------------------------------------------------
if(SubsetExists(DimName,SubName)=1);
SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;
## SubsetElementInsert(DimName,SubName,pYearPeriod,1);
sMDX='EXCEPT([MA_Layer].[MA_Layer].MEMBERS , {[MA_Layer].[MA_Layer].[Source System]})';
 SubsetMDXSet(DimName,SubName,sMDX);
 SubsetMDXSet(DimName,SubName,'');

ViewSubsetAssign(CubeName,ViewName,DimName,SubName);




ViewZeroOut(CubeName,ViewName);






#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****
#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****


# determine whether we want Local Currency or GBP based on Journal Type

sAccount=CELLGETS('JNL_Posting_Budget',Companies,Period,vJournal,Sequence,'TM1 Account');
sMALayer=CELLGETS('JNL_Posting_Budget',Companies,Period,vJournal,Sequence,'MA_LAYER');

if(sMALayer@='Local Adjustment MA');
  sMALayer='Local Adjustment';
endif;  
  
if(sMALayer@='Local Allocation');
  sMALayer='Local Adjst (GBP)';  
endif;

if(sMALayer@='SOURCE SYSTEM');
  itemskip;
endif;

#sMALayerParent=ELPAR('MA_Layer',sMALayer,1);
#if(sMALayerParent@='Source LC');
 
if(sMALayer@='Local Adjustment'%sMALayer@='Local Audit');
 nValue=CELLGETN('JNL_Posting_Budget',Companies,Period,vJournal,Sequence,'Value Local Currency');
else;
 nValue=CELLGETN('JNL_Posting_Budget',Companies,Period,vJournal,Sequence,'Value GBP');
endif;

# until mapping is complete
if(DimensionElementExists('TM1 Accounts', sAccount )=0);
  itemskip;
endif;

CubeName='MA_Fact';
CELLINCREMENTN(nValue,CubeName,Companies,Period,'Budget',sMALayer,sAccount,'Month');





#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

CubeName='MA_Fact';
CubeSetLogChanges(CubeName,1);
#endregion