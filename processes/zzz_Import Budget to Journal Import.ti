#region Prolog
#****Begin: Generated Statements***
#****End: Generated Statements****


# This process imports the journal extract from Access: tm1_output_budget.txt

pFileLocation='.\model_upload\';
pFilePathName=pFileLocation | pFileName;

if(FileExists(pFilePathName)=1);
  DatasourceNameForServer=pFilePathName;
else;
  # choice of erroring, or use a default. probably error
  pErrorMsg='File not found: ' | pFilePathName;
  ProcessBreak;
endif;

# since even setting the properties seems to make no diference, try here!>
DimensionSortOrder ('Journal by Reference', 'ByName', 'Ascending','ByHierarchy', 'Ascending'); 

# Clear Destination - if year (and period) specified, clear out
# =====================================================
CubeName='JNL_Posting';
CubeSetLogChanges(CubeName,0);
ViewName='zZeroImport';
SubName=ViewName;

if(ViewExists(CubeName,ViewName)=1);
ViewDestroy(CubeName,ViewName);
endif;
ViewCreate(CubeName,ViewName);

if(pYearPeriod@<>'');
DimName='Period';
#--------------------------------------------------------------------------------------------
if(SubsetExists(DimName,SubName)=1);
SubsetDeleteAllElements(DimName,SubName);
else;
SubsetCreate(DimName,SubName);
endif;
## SubsetElementInsert(DimName,SubName,pYearPeriod,1);
sMDX='DRILLDOWNMEMBER({[Period].[Period].[' | pYearPeriod | ']} , {[Period].[Period].[' | pYearPeriod | ']} , RECURSIVE)';
 SubsetMDXSet(DimName,SubName,sMDX);
 SubsetMDXSet(DimName,SubName,'');

ViewSubsetAssign(CubeName,ViewName,DimName,SubName);
endif;

ViewZeroOut(CubeName,ViewName);



#For Logging
nTimeStart=NOW;
nRecordsMetaData=0;
nRecordsData=0;
nErrors=0;

#endregion
#region Metadata
#****Begin: Generated Statements***
#****End: Generated Statements****

#nValue=MA_Rpt_Value;
# skip rows with no value
#if(nValue=0);
# itemskip;
#endif;

# add new JNL codes to dim:"Journal by Reference"

#DimName='Journal by Reference';
#if(DIMIX(DimName,JOURNAL_CODE)=0);
#DimensionElementInsert(DimName,'','TOTAL JOURNALS','N'); 
#   DimensionElementInsert(DimName,'',JOURNAL_CODE,'N');
  # DimensionElementInsert(DimName,'',MA_LAYER,'N');
#   DimensionElementInsert(DimName,'',Report_Level_2,'N'); 
  # DimensionElementComponentAdd(DimName,MA_LAYER,JOURNAL_CODE,1);
#  DimensionElementComponentAdd(DimName,Report_Level_2,JOURNAL_CODE,1);
#  DimensionElementComponentAdd(DimName,'TOTAL JOURNALS',Report_Level_2,1);
  
 # DimensionElementComponentAdd(DimName,Report_Level_2,MA_LAYER,1);
#endif;

#endregion
#region Data
#****Begin: Generated Statements***
#****End: Generated Statements****

nRecordsData=nRecordsData+1;
sError='';

nValue=MA_Rpt_Value;
# skip rows with no value
if(nValue=0);
 itemskip;
endif;

if(MA_Layer@='SOURCE SYSTEM');
  itemskip;
endif;

if(Scenario@='FORECAST');
  itemskip;
endif;

# update attributes of Journal code (Journal by Reference)


DimName='Journal by Reference';
#ATTRPUTS(MA_LAYER,DimName,JOURNAL_CODE,'MA_LAYER');
ATTRPUTS(Report_Level_2,DimName,JOURNAL_CODE,'Report_Level_2');

CubeName='JNL_Posting_Budget';
# find next empty row for this combination. 
# can either: 1: loop through until find a blank. 2: iterate a counter somewhere. lets try looping first and see how long it takes

Source_period=subst(Source_period,1,6);


i=1;
tDim=DIMSIZ('Sequence');
while( i<=tDim );
 # going to look at the Amount field.
 nNextEmpty=CELLGETN(CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'Amount');
 if(nNextEmpty=0);
   Break;
 endif;
 
 i=i+1;
end;
if(i>tDim);
 sError='Too many rows in this journal! Manually update the dimension:Sequence';
endif;




# handle/report caught minor errors
if(sError@<>'');
 nErrors=nErrors+1;
 logoutput('INFO',sError | ' :  sourcerow:' | numbertostring(nRecordsData) | ' : ' | Source_Company |'|'| Source_period |'|'| JOURNAL_CODE |'|'| Source_Account_Code |'|'| numbertostring(nValue));
 itemskip;
endif; 



#ensure fx period is populated. sometimes it is "0", or just a year, eg 2020, in which case will assume.... same
if(Consol_FX_Period@='' % Consol_FX_Period@='0' % LONG(Consol_FX_Period)=4);
  Consol_FX_Period=Source_period;
endif;

# post values
CELLPUTS(Consol_FX_Period,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'FX_Period');
CELLPUTS(Source_Account_Code,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'Source_Account_Code');
CELLPUTS(MA_FX,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'MA FX');
CELLPUTS(MA_Dept,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'MA_Dept');
CELLPUTS(Source_System,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'Source_System');
CELLPUTS(MA_LAYER,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'MA_LAYER');

CELLPUTN(nValue,CubeName,Source_Company,Source_period,JOURNAL_CODE,numbertostring(i),'Amount');



 
#endregion
#region Epilog
#****Begin: Generated Statements***
#****End: Generated Statements****

CubeName='JNL_Posting_Budget';
CubeSetLogChanges(CubeName,1);

if(pErrorMsg@='');
 if(nErrors<>0);
   pErrorMsg=GetProcessName | ' Completed with errors - see debug log. nErrors='| numbertostring(nErrors);
 else;
   pErrorMsg=GetProcessName | ' Completed Successfully. Rows=' | numbertostring(nRecordsData);
 endif;
endif;

LOGOUTPUT('INFO',pErrorMsg);
#endregion